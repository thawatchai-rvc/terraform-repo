---
- hosts: spider-cicd-dev-rancher
  vars_files:
    - vars.yml
  vars:
    kubeconfigs:
      - cicd-cluster-kubeconfig.yaml
      # - database-cluster-kubeconfig.yaml
      # - dev-cluster-kubeconfig.yaml
      # - fraud-cluster-kubeconfig.yaml
      # - sit-cluster-kubeconfig.yaml

  tasks:
    - name: Set up kubeconfig file
      shell: "cp ~/{{ item }} /tmp/{{ item }} && chmod 0600 /tmp/{{ item }}"
      with_items: "{{ kubeconfigs }}"

    - name: Create namespace for ArgoCD
      command: "kubectl create namespace argocd"
      environment:
        KUBECONFIG: "/tmp/{{ item }}"
      ignore_errors: yes
      with_items: "{{ kubeconfigs }}"

    - name: Install ArgoCD using kubectl
      command: >
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      environment:
        KUBECONFIG: "/tmp/{{ item }}"
      with_items: "{{ kubeconfigs }}"

    - name: Wait for ArgoCD server to be ready
      command: >
        kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd
      environment:
        KUBECONFIG: "/tmp/{{ item }}"
      with_items: "{{ kubeconfigs }}"

    - name: Patch ArgoCD Service to NodePort
      command: >
        kubectl patch svc argocd-server -n argocd -p '{
          "spec": {
            "type": "NodePort",
            "ports": [
              {
                "name": "http",
                "port": 80,
                "targetPort": 8080,
                "nodePort": 30080
              },
              {
                "name": "https",
                "port": 443,
                "targetPort": 8080,
                "nodePort": 32002
              }
            ]
          }
        }'
      environment:
        KUBECONFIG: "/tmp/{{ item }}"
      with_items: "{{ kubeconfigs }}"
    
    - name: Change ArgoCD admin password using kubectl
      shell: |
        kubectl -n argocd patch secret argocd-secret \
          -p '{"stringData": {
            "admin.password": "{{ argocd_new_password }}"
          }}'
      environment:
        KUBECONFIG: "/tmp/{{ item }}"
      args:
        executable: /bin/bash
      with_items: "{{ kubeconfigs }}"
