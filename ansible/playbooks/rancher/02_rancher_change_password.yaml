---
- hosts: infra-lab-cicd-dev-rancher
  become: yes
  vars_files:
    - vars.yml

  tasks:
    - name: Wait for Rancher to open port 8443
      wait_for:
        port: "{{ rancher_port }}"
        host: "{{ rancher_hostname }}"
        delay: 15
        timeout: 300
      register: rancher_port_status
      retries: 10
      delay: 15
      until: rancher_port_status is success

    - name: Get Rancher admin password from logs
      shell: "docker logs rancher 2>&1 | grep 'Bootstrap Password:' | awk '{print $NF}'"
      register: rancher_password

    - debug:
        var: rancher_password.stdout
    
    - name: Check if the current password was retrieved
      fail:
        msg: "Failed to retrieve the current password from logs."
      when: rancher_password.stdout == ""

    - name: Authenticate
      uri:
        url: "https://{{ rancher_hostname }}:{{ rancher_port }}/v3-public/localProviders/local?action=login"
        method: POST
        headers:
          Content-Type: "application/json"
        body: |
          {
            "username": "admin",
            "password": "{{ rancher_password.stdout }}"
          }
        body_format: json
        validate_certs: no
        return_content: yes
      ignore_errors: yes
      register: login_response

    - name: Debug login response
      debug:
        var: login_response

    - name: Set Rancher URL
      uri:
        url: "https://{{ rancher_hostname }}:{{ rancher_port }}/v3/settings/server-url"
        method: PUT
        validate_certs: no
        headers:
          Authorization: "Bearer {{ login_response.json.token }}"
          Content-Type: "application/json"
        body: |
          {
            "name": "server-url",
            "value": "{{ rancher_url }}"
          }
        body_format: json
      register: set_url_response

    - debug:
        var: set_url_response

    - name: Change Rancher admin password
      uri:
        url: "https://{{ rancher_hostname }}:{{ rancher_port }}/v3/users?action=changepassword"
        method: POST
        validate_certs: no
        headers:
          Authorization: "Bearer {{ login_response.json.token }}"
          Content-Type: "application/json"
        body: |
          {
            "currentPassword": "{{ rancher_password.stdout }}",
            "newPassword": "{{ admin_password }}"
          }
        body_format: json
      register: password_change_response

    - debug:
        var: password_change_response